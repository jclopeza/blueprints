---
apiVersion: xl-deploy/v1
kind: Applications
spec:
- name: Applications/Applications
  type: core.Directory
- name: Applications/Applications/application-{{.ApplicationName}}-k8s
  type: core.Directory
- name: Applications/Applications/application-{{.ApplicationName}}-k8s/deployment-{{.MicroserviceName}}
  type: udm.Application
  pipeline: "Configuration/pipeline-voting-app-k8s"
- name: Applications/Applications/application-{{.ApplicationName}}-k8s/deployment-{{.MicroserviceName}}/{{.MicroserviceVersion}}
  type: udm.DeploymentPackage
  deployables:
  - name: destination-rule-{{.MicroserviceName}}-{{.MicroserviceVersion}}
    type: k8s.ResourcesFile
    mergePatchType: strategic
    propagationPolicy: Foreground
    updateMethod: apply
    file: !file "resourcesFiles/destination-rules.yaml"
  - name: deployment-{{.MicroserviceName}}-{{.MicroserviceVersion}}
    type: k8s.DeploymentSpec
    containers:
    - name: container
      type: k8s.ContainerSpec
      containerName: {{.MicroserviceName}}
      image: lyhsoft-registry:8084/{{.MicroserviceName}}:{{.MicroserviceVersion}}
      ports:
      - name: port
        type: k8s.ContainerPortSpec
        containerPort: "{{.ContainerPort}}"
    podCreateDeleteRetryCount: "20"
    labels:
      run: {{.MicroserviceName}}
      version: "{{.MicroserviceVersion}}"
    restartPolicy: Always
    deploymentName: deployment-{{.MicroserviceName}}-{{.MicroserviceVersion | replace "." "-" | lower}}
    replicasCount: "1"
    matchLabels:
      run: {{.MicroserviceName}}
      version: "{{.MicroserviceVersion}}"
  applicationDependencies:
    service-{{.MicroserviceName}}: ""
    virtual-service-{{.MicroserviceName}}: "{{.MicroserviceVersion}}"
  dependencyResolution: EXISTING
  undeployDependencies: "true"
  changeLog: !source "resourcesFiles/change-log.txt"
  gitRepo: !value GIT_REPO
  buildUrl: !value BUILD_URL
  commitId: !value COMMIT_ID